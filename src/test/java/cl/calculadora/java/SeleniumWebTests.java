package cl.calculadora.java;
// Generated by Selenium IDE para curso con Java.
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.junit.jupiter.api.TestInstance.Lifecycle;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.AfterAll;
import static org.junit.jupiter.api.Assertions.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import java.util.*;
import java.net.MalformedURLException;
@TestInstance (Lifecycle.PER_CLASS)
public class SeleniumWebTests {
  private WebDriver driver;
  JavascriptExecutor js;

  @BeforeAll
  public void setUp() throws MalformedURLException {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    new HashMap<String, Object>();
  }
  @AfterAll
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void SietePor5Igual35() {
    // Test name: 7Por5Igual35
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.calculadoraonline.org//");
    // 2 | click | css=.number:nth-child(4) | 
    driver.findElement(By.cssSelector(".number:nth-child(4)")).click();
    // 3 | click | css=.operation:nth-child(14) | 
    driver.findElement(By.cssSelector(".operation:nth-child(14)")).click();
    // 4 | click | css=.number:nth-child(12) | 
    driver.findElement(By.cssSelector(".number:nth-child(12)")).click();
    // 5 | click | name=enter | 
    driver.findElement(By.name("enter")).click();
    // 6 | waitForElementPresent | name=display | 30000
    {
      final WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.name("display")));
    }
    // 7 | assertValue | name=display | 35
    {
      final String value = driver.findElement(By.name("display")).getAttribute("value");
      assertTrue(value.equals("35"));
    }

  }

  @Test
  public void SetentaDividido0IgualInfinity() {
    // Test name: 70Dividido0IgualInfinity
    // Step # | name | target | value
    // 1 | open | / |
    driver.get("https://www.calculadoraonline.org//");
    // 2 | click | css=.number:nth-child(4) |
    driver.findElement(By.cssSelector(".number:nth-child(4)")).click();
    // 3 | click | css=.number:nth-child(26) |
    driver.findElement(By.cssSelector(".number:nth-child(26)")).click();
    // 4 | click | css=.operation:nth-child(7) |
    driver.findElement(By.cssSelector(".operation:nth-child(7)")).click();
    // 5 | click | css=.number:nth-child(26) |
    driver.findElement(By.cssSelector(".number:nth-child(26)")).click();
    // 6 | click | name=enter |
    driver.findElement(By.name("enter")).click();
    // 7 | waitForElementPresent | name=display | 30000
    {
      final WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.name("display")));
    }
    // 8 | assertValue | name=display | Infinity
    {
      final String value = driver.findElement(By.name("display")).getAttribute("value");
      assertTrue(value.equals("Infinity"));
    }
  }

  @Test
  public void SetentaDividido7Igual10() {
    // Test name: 70Dividido7Igual10
    // Step # | name | target | value
    // 1 | open | / |
    driver.get("https://www.calculadoraonline.org//");
    // 2 | click | css=.number:nth-child(4) |
    driver.findElement(By.cssSelector(".number:nth-child(4)")).click();
    // 3 | click | css=.number:nth-child(26) |
    driver.findElement(By.cssSelector(".number:nth-child(26)")).click();
    // 4 | click | css=.operation:nth-child(7) |
    driver.findElement(By.cssSelector(".operation:nth-child(7)")).click();
    // 5 | click | css=.number:nth-child(4) |
    driver.findElement(By.cssSelector(".number:nth-child(4)")).click();
    // 6 | click | name=enter |
    driver.findElement(By.name("enter")).click();
    // 7 | waitForElementPresent | name=display | 30000
    {
      final WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.name("display")));
    }
    // 8 | assertValue | name=display | 10
    {
      final String value = driver.findElement(By.name("display")).getAttribute("value");
      assertTrue(value.equals("10"));
    }
  }

  @Test
  public void SetentaMenos50Igual20() {
    // Test name: 70Menos50Igual20
    // Step # | name | target | value
    // 1 | open | / |
    driver.get("https://www.calculadoraonline.org//");
    // 2 | click | css=.number:nth-child(4) |
    driver.findElement(By.cssSelector(".number:nth-child(4)")).click();
    // 3 | click | css=.number:nth-child(26) |
    driver.findElement(By.cssSelector(".number:nth-child(26)")).click();
    // 4 | click | css=.operation:nth-child(21) |
    driver.findElement(By.cssSelector(".operation:nth-child(21)")).click();
    // 5 | click | css=.number:nth-child(12) |
    driver.findElement(By.cssSelector(".number:nth-child(12)")).click();
    // 6 | click | css=.number:nth-child(26) |
    driver.findElement(By.cssSelector(".number:nth-child(26)")).click();
    // 7 | click | name=enter |
    driver.findElement(By.name("enter")).click();
    // 8 | waitForElementPresent | name=display | 30000
    {
      final WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.name("display")));
    }
    // 9 | assertValue | name=display | 20
    {
      final String value = driver.findElement(By.name("display")).getAttribute("value");
      assertTrue(value.equals("20"));
    }
  }
}
